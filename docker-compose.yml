version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./apps/api/.env.production
    networks:
      - expense-tracker
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "bun",
          "run",
          "-e",
          "fetch('http://localhost:3000/health').then(r => r.ok ? process.exit(0) : process.exit(1))",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ui:
    build:
      context: .
      dockerfile: apps/ui/Dockerfile
    ports:
      - "80:80"
    env_file:
      - ./apps/ui/.env.production
    depends_on:
      api:
        condition: service_healthy
    networks:
      - expense-tracker
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  expense-tracker:
    driver: bridge
